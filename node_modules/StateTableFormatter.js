function quote(value, doublequote) {
	
	if(doublequote === undefined) {
		doublequote = true;
	}
	
	if(doublequote) {
		return '"' + value + '"';
	}
	else {
		return "'" + value + "'";
	}
}

exports.CSV = function() {

	this.output = '';
	this.headers = [];

	this.filename = 'state_table.csv';

	this.header = function(headers) {
		this.output += headers.join(',') + "\n";
		this.headers = headers;
	};

	this.row = function(data) {
		var row = [];
		for(var index in this.headers) {
			var header = this.headers[index];
			row.push(quote(data[header]));
		}
		row = row.join(',') + "\n";
		this.output += row;
	};

	this.footer = function() {
		// Do nothing
	};

	this.render = function() {
		return this.output;
	};

	this.length = function() {
		return this.output.length;
	};

};

exports.SQL = function() {

	this.output = '';
	this.headers = [];

	this.filename = 'state_table.sql';

	this.header = function(headers) {
		var header_index;
		this.output += "-- State Table courtesy statetable.com\n\n";
		this.output += 'CREATE TABLE state (';
		for(header_index in headers) {
			var header = headers[header_index];
			var dataType;

			if(header_index > 0) {
				this.output += ', ';
			}
			switch(header) {
				case 'id':
				case 'sort':
					dataType = 'integer';
					break;
				default:
					dataType = 'varchar(255)';
			}

			this.output += header + ' ' + dataType;
		}
	
		this.output += ");\n\n";
		this.headers = headers;
	};

	this.row = function(data) {

		var sql = '';
		var row = [];
		var header_index;

		sql += "INSERT INTO state (";
		sql += this.headers.join(',');
		sql += ") VALUES (";
		
		for(header_index in this.headers) {
			var header = this.headers[header_index];
			row.push(quote(data[header] || '').trim());
		}

		sql += row.join(',') + ");\n\n";
		this.output += sql;

	};

	this.footer = function() {
		// Do nothing
	};

	this.render = function() {
		return this.output;
	};

	this.length = function() {
		return this.output.length;
	};

};

exports.SELECT = function() {

	this.output = '';
	this.headers = [];

	this.filename = 'state_table.html';

	this.header = function(headers) {
		this.output += '<select>';
	};

	this.row = function(data) {
		var row = '<option value="' + data['abbreviation'] + '">' + data['name'] + "</option>\n\n";
		this.output += row;
	};

	this.footer = function() {
		this.output += '</select>';
	};

	this.render = function() {
		return this.output;
	};

	this.length = function() {
		return this.output.length;
	};

};

exports.PHP_ARRAY = function() {

	this.output = '';
	this.headers = [];

	this.filename = 'state_table.php';

	this.header = function(headers) {
		this.output += 'array(';
	};

	this.row = function(data) {
		var row = "'" + data['abbreviation'] + "' => ";
		row += "'" + data['name'].replace(/'/g, '\\\'') + "',\n";
		this.output += row;
	};

	this.footer = function() {
		this.output += ');';
	};

	this.render = function() {
		return this.output;
	};

	this.length = function() {
		return this.output.length;
	};

};

exports.DRUPAL = function() {

	this.output = '';
	this.headers = [];

	this.filename = 'state_table.txt';

	this.header = function(headers) {
	};

	this.row = function(data) {
		this.output += data['abbreviation'] + '|' + data['name'] + "\n";
	};

	this.footer = function() {
		this.output += ');';
	};

	this.render = function() {
		return this.output;
	};

	this.length = function() {
		return this.output.length;
	};

};

exports.factory = function(format) {

	switch(format) {
		case 'csv':
			return new exports.CSV();
		case 'sql':
			return new exports.SQL();
		case 'select':
			return new exports.SELECT();
		case 'php_array':
			return new exports.PHP_ARRAY();
		case 'drupal':
			return new exports.DRUPAL();
		default:
			// Return nothing
	}

};